{
  "swagger": "2.0",
  "info": {
    "title": "OnTimeApp API",
    "contact": {
      "name": "Sergio Jimenez",
      "email": "sergiojj932@gmail.com"
    },
    "version": "1"
  },
  "paths": {
    "/api/v1/CheckInRecords": {
      "get": {
        "tags": [
          "CheckInRecords"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CheckInResponseResponseSet"
            }
          }
        }
      }
    },
    "/api/v1/CheckInRecords/{email}": {
      "get": {
        "tags": [
          "CheckInRecords"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CheckInResponseResponseSet"
            }
          }
        }
      }
    },
    "/api/v1/CheckInRecords/{email}/{date}": {
      "get": {
        "tags": [
          "CheckInRecords"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CheckInResponseResponseSet"
            }
          }
        }
      }
    },
    "/api/v1/CheckInRecords/WorkedTime/{email}/{date}": {
      "get": {
        "tags": [
          "CheckInRecords"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WorkedTimeResponse"
            }
          }
        }
      }
    },
    "/api/v1/CheckInRecords/Register": {
      "post": {
        "tags": [
          "CheckInRecords"
        ],
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CheckInResgistrationRequest"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CheckInResponse"
            }
          }
        }
      }
    },
    "/api/v1/Holidays/ToApprove/{email}": {
      "get": {
        "tags": [
          "Holidays"
        ],
        "summary": "Get the Holiday requests that the user has to approve",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "description": "The manager email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HolidayRequestResponseResponseSet"
            }
          }
        }
      }
    },
    "/api/v1/Holidays/{email}/{from}/{to}": {
      "get": {
        "tags": [
          "Holidays"
        ],
        "summary": "Get a set of request that belong to the user with the passed email between the years from and to",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "description": "Owner email",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "from",
            "description": "From year",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "to",
            "description": "To year",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HolidayRequestResponseResponseSet"
            }
          }
        }
      }
    },
    "/api/v1/Holidays/Approve": {
      "post": {
        "tags": [
          "Holidays"
        ],
        "summary": "Approve an existing Holiday request",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/HolidayApproveRequest"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HolidayRequestResponse"
            }
          }
        }
      }
    },
    "/api/v1/Holidays/Delete": {
      "post": {
        "tags": [
          "Holidays"
        ],
        "summary": "Delete an existing Holiday request",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/HolidayDeleteRequest"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HolidayRequestResponse"
            }
          }
        }
      }
    },
    "/api/v1/Holidays/Register": {
      "post": {
        "tags": [
          "Holidays"
        ],
        "summary": "Register a new leave request",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/HolidayRequestRegistration"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HolidayRequestResponse"
            }
          }
        }
      }
    },
    "/api/v1/Identity/init": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Creates default admin user, this is added because we do not have a real database where to add this info.\r\nWe use an in memory db so each time the service is restarted, this should be called",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/Identity/register": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Register a new user in the system",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The new user information",
            "schema": {
              "$ref": "#/definitions/UserRegistrationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an AuthResponse object with success true and empty token",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          }
        }
      }
    },
    "/api/v1/Identity/login": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Login user in the system",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The user information",
            "schema": {
              "$ref": "#/definitions/UserLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an AuthResponse object with succes true and empty token",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          }
        }
      }
    },
    "/api/v1/Roles/register": {
      "post": {
        "tags": [
          "Roles"
        ],
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RoleRegistrationRequest"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleResponse"
            }
          }
        }
      }
    },
    "/api/v1/Roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringResponseSet"
            }
          }
        }
      }
    },
    "/api/v1/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserResponseResponseSet"
            }
          }
        }
      }
    },
    "/api/v1/Users/{email}": {
      "get": {
        "tags": [
          "Users"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          }
        }
      }
    },
    "/api/v1/Users/AddRole": {
      "post": {
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UserRoleAdditionRequest"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleResponse"
            }
          }
        }
      }
    },
    "/api/v1/Users/GetRoles/{email}": {
      "get": {
        "tags": [
          "Users"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RoleResponseResponseSet"
            }
          }
        }
      }
    },
    "/api/v1/Users/Subordinates/{email}": {
      "get": {
        "tags": [
          "Users"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserResponseResponseSet"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CheckInResponse": {
      "type": "object",
      "properties": {
        "info": {
          "type": "string"
        },
        "utcDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "location": {
          "description": "If true location is assume else, wifi",
          "type": "boolean"
        },
        "endDay": {
          "type": "boolean"
        },
        "errors": {
          "description": "Set of errors that can potentially occur",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "success": {
          "description": "If the request was succesfull or not",
          "type": "boolean"
        }
      }
    },
    "CheckInResponseResponseSet": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckInResponse"
          }
        },
        "errors": {
          "description": "Set of errors that can potentially occur",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "success": {
          "description": "If the request was succesfull or not",
          "type": "boolean"
        }
      }
    },
    "WorkedTimeResponse": {
      "type": "object",
      "properties": {
        "hours": {
          "format": "int32",
          "type": "integer"
        },
        "minutes": {
          "format": "int32",
          "type": "integer"
        },
        "errors": {
          "description": "Set of errors that can potentially occur",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "success": {
          "description": "If the request was succesfull or not",
          "type": "boolean"
        }
      }
    },
    "CheckInResgistrationRequest": {
      "required": [
        "endDay",
        "info",
        "location",
        "userEmail"
      ],
      "type": "object",
      "properties": {
        "userEmail": {
          "type": "string"
        },
        "info": {
          "type": "string"
        },
        "location": {
          "type": "boolean"
        },
        "utcDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endDay": {
          "type": "boolean"
        }
      }
    },
    "HolidayRequestResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "dateFrom": {
          "format": "date-time",
          "type": "string"
        },
        "dateTo": {
          "format": "date-time",
          "type": "string"
        },
        "approved": {
          "type": "boolean"
        },
        "approverEmail": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "errors": {
          "description": "Set of errors that can potentially occur",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "success": {
          "description": "If the request was succesfull or not",
          "type": "boolean"
        }
      }
    },
    "HolidayRequestResponseResponseSet": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HolidayRequestResponse"
          }
        },
        "errors": {
          "description": "Set of errors that can potentially occur",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "success": {
          "description": "If the request was succesfull or not",
          "type": "boolean"
        }
      }
    },
    "HolidayApproveRequest": {
      "required": [
        "requestId"
      ],
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        }
      }
    },
    "HolidayDeleteRequest": {
      "required": [
        "requestId"
      ],
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        }
      }
    },
    "HolidayRequestRegistration": {
      "required": [
        "from",
        "to",
        "userEmail"
      ],
      "type": "object",
      "properties": {
        "from": {
          "format": "date-time",
          "type": "string"
        },
        "to": {
          "format": "date-time",
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        }
      }
    },
    "UserRegistrationRequest": {
      "description": "Request to create a new user",
      "required": [
        "email",
        "password"
      ],
      "type": "object",
      "properties": {
        "email": {
          "format": "email",
          "description": "The email of the user",
          "type": "string"
        },
        "password": {
          "description": "The password of the user",
          "type": "string"
        }
      }
    },
    "AuthResponse": {
      "description": "Response of authentication",
      "type": "object",
      "properties": {
        "token": {
          "description": "The token assigned to the user",
          "type": "string"
        },
        "errors": {
          "description": "Set of errors that can potentially occur",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "success": {
          "description": "If the request was succesfull or not",
          "type": "boolean"
        }
      }
    },
    "UserLoginRequest": {
      "description": "Request to login a user",
      "required": [
        "email",
        "password"
      ],
      "type": "object",
      "properties": {
        "email": {
          "format": "email",
          "description": "The email of the user",
          "type": "string"
        },
        "password": {
          "description": "The password of the user",
          "type": "string"
        }
      }
    },
    "RoleRegistrationRequest": {
      "description": "Request to create a new Role",
      "required": [
        "roleName"
      ],
      "type": "object",
      "properties": {
        "roleName": {
          "description": "The name of the new role",
          "type": "string"
        }
      }
    },
    "RoleResponse": {
      "type": "object",
      "properties": {
        "roleName": {
          "type": "string"
        },
        "errors": {
          "description": "Set of errors that can potentially occur",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "success": {
          "description": "If the request was succesfull or not",
          "type": "boolean"
        }
      }
    },
    "StringResponseSet": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errors": {
          "description": "Set of errors that can potentially occur",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "success": {
          "description": "If the request was succesfull or not",
          "type": "boolean"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "errors": {
          "description": "Set of errors that can potentially occur",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "success": {
          "description": "If the request was succesfull or not",
          "type": "boolean"
        }
      }
    },
    "UserResponseResponseSet": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserResponse"
          }
        },
        "errors": {
          "description": "Set of errors that can potentially occur",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "success": {
          "description": "If the request was succesfull or not",
          "type": "boolean"
        }
      }
    },
    "UserRoleAdditionRequest": {
      "required": [
        "role",
        "userEmail"
      ],
      "type": "object",
      "properties": {
        "role": {
          "type": "string"
        },
        "userEmail": {
          "format": "email",
          "type": "string"
        }
      }
    },
    "RoleResponseResponseSet": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleResponse"
          }
        },
        "errors": {
          "description": "Set of errors that can potentially occur",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "success": {
          "description": "If the request was succesfull or not",
          "type": "boolean"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the bearer scheme"
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}